import groovy.xml.MarkupBuilder

plugins {
    id 'com.android.application'
}

def twaManifest = [
    applicationId              : 'com.apluswealth.getcovered.twa',
    hostName                   : 'getcovered.apluswealth.com',
    launchUrl                  : '/',
    name                       : 'AplusWealth Inc. - Get Covered',
    launcherName               : 'Get Covered',
    themeColor                 : '#FFFFFF',
    themeColorDark             : '#000000',
    navigationColor            : '#000000',
    navigationColorDark        : '#000000',
    navigationDividerColor     : '#000000',
    navigationDividerColorDark : '#000000',
    backgroundColor            : '#266AB3',
    enableNotifications        : true,
    shortcuts                  : [],
    splashScreenFadeOutDuration: 300,
    generatorApp               : 'bubblewrap-cli',
    fallbackType               : 'webview',
    enableSiteSettingsShortcut : 'true',
    orientation                : 'default',
]

android {
    compileSdkVersion 36
    namespace "com.apluswealth.getcovered.twa"

    defaultConfig {
        applicationId "com.apluswealth.getcovered.twa"
        minSdkVersion 21
        targetSdkVersion 36
        versionCode 1
        versionName "1"

        resValue "string", "appName", twaManifest.name
        resValue "string", "launcherName", twaManifest.launcherName

        def launchUrl = "https://" + twaManifest.hostName + twaManifest.launchUrl
        resValue "string", "launchUrl", launchUrl

        resValue "string", "webManifestUrl", 'https://getcovered.apluswealth.com/manifest.json'
        resValue "string", "fullScopeUrl", 'https://getcovered.apluswealth.com/'
        resValue "string", "hostName", twaManifest.hostName

        resValue "color", "colorPrimary", twaManifest.themeColor
        resValue "color", "colorPrimaryDark", twaManifest.themeColorDark
        resValue "color", "navigationColor", twaManifest.navigationColor
        resValue "color", "navigationColorDark", twaManifest.navigationColorDark
        resValue "color", "navigationDividerColor", twaManifest.navigationDividerColor
        resValue "color", "navigationDividerColorDark", twaManifest.navigationDividerColorDark
        resValue "color", "backgroundColor", twaManifest.backgroundColor

        resValue "string", "providerAuthority", twaManifest.applicationId + '.fileprovider'
        resValue "bool", "enableNotification", twaManifest.enableNotifications.toString()
        resValue "integer", "splashScreenFadeOutDuration", twaManifest.splashScreenFadeOutDuration.toString()
        resValue "string", "generatorApp", twaManifest.generatorApp
        resValue "string", "fallbackType", twaManifest.fallbackType
        resValue "bool", "enableSiteSettingsShortcut", twaManifest.enableSiteSettingsShortcut
        resValue "string", "orientation", twaManifest.orientation

        twaManifest.shortcuts.eachWithIndex { shortcut, index ->
            resValue "string", "shortcut_name_$index", "$shortcut.name"
            resValue "string", "shortcut_short_name_$index", "$shortcut.short_name"
        }
    }

signingConfigs {
    release {
        storeFile file(rootProject.file("android.keystore"))
        storePassword "ashkonal"
        keyAlias "aplus"
        keyPassword "ashkonal"

        v1SigningEnabled true
        v2SigningEnabled true
    }
}


buildTypes {
    release {
        signingConfig signingConfigs.release
        minifyEnabled false
        shrinkResources false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
}

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions { checkReleaseBuilds false }
}
configurations.all {
    resolutionStrategy {
        force 'androidx.browser:browser:1.9.0-alpha04'
    }
}

task generateShorcutsFile {
    assert twaManifest.shortcuts.size() < 5, "You can have at most 4 shortcuts."
    twaManifest.shortcuts.eachWithIndex { s, i ->
        assert s.name != null, 'Missing `name` in shortcut #' + i
        assert s.short_name != null, 'Missing `short_name` in shortcut #' + i
        assert s.url != null, 'Missing `icon` in shortcut #' + i
        assert s.icon != null, 'Missing `url` in shortcut #' + i
    }
    def shortcutsFile = new File("$projectDir/src/main/res/xml", "shortcuts.xml")
    def xmlWriter = new StringWriter()
    def xmlMarkup = new MarkupBuilder(new IndentPrinter(xmlWriter, "    ", true))
    xmlMarkup.'shortcuts'('xmlns:android': 'http://schemas.android.com/apk/res/android') {}
    shortcutsFile.text = xmlWriter.toString() + '\n'
}
preBuild.dependsOn(generateShorcutsFile)

dependencies {
    implementation "com.google.androidbrowserhelper:androidbrowserhelper:2.6.2"
    implementation "androidx.browser:browser:1.9.0-alpha04"
}
configurations.all {
    resolutionStrategy { force 'androidx.browser:browser:1.9.0-alpha04' }
}
